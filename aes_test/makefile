#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/aes_test

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/aes_test

OBJ_DEBUG = $(OBJDIR_DEBUG)/library/gcm.o $(OBJDIR_DEBUG)/library/dhm.o $(OBJDIR_DEBUG)/library/ecdh.o $(OBJDIR_DEBUG)/library/ecdsa.o $(OBJDIR_DEBUG)/library/ecjpake.o $(OBJDIR_DEBUG)/library/ecp.o $(OBJDIR_DEBUG)/library/ecp_curves.o $(OBJDIR_DEBUG)/library/entropy.o $(OBJDIR_DEBUG)/library/entropy_poll.o $(OBJDIR_DEBUG)/library/error.o $(OBJDIR_DEBUG)/library/des.o $(OBJDIR_DEBUG)/library/havege.o $(OBJDIR_DEBUG)/library/hkdf.o $(OBJDIR_DEBUG)/library/hmac_drbg.o $(OBJDIR_DEBUG)/library/md.o $(OBJDIR_DEBUG)/library/md2.o $(OBJDIR_DEBUG)/library/md4.o $(OBJDIR_DEBUG)/library/md5.o $(OBJDIR_DEBUG)/library/memory_buffer_alloc.o $(OBJDIR_DEBUG)/library/blowfish.o $(OBJDIR_DEBUG)/library/aes.o $(OBJDIR_DEBUG)/library/aesni.o $(OBJDIR_DEBUG)/library/arc4.o $(OBJDIR_DEBUG)/library/aria.o $(OBJDIR_DEBUG)/library/asn1parse.o $(OBJDIR_DEBUG)/library/asn1write.o $(OBJDIR_DEBUG)/library/base64.o $(OBJDIR_DEBUG)/library/bignum.o $(OBJDIR_DEBUG)/library/nist_kw.o $(OBJDIR_DEBUG)/library/camellia.o $(OBJDIR_DEBUG)/library/ccm.o $(OBJDIR_DEBUG)/library/chacha20.o $(OBJDIR_DEBUG)/library/chachapoly.o $(OBJDIR_DEBUG)/library/cipher.o $(OBJDIR_DEBUG)/library/cipher_wrap.o $(OBJDIR_DEBUG)/library/cmac.o $(OBJDIR_DEBUG)/library/ctr_drbg.o $(OBJDIR_DEBUG)/library/sha1.o $(OBJDIR_DEBUG)/library/psa_crypto_slot_management.o $(OBJDIR_DEBUG)/library/psa_crypto_storage.o $(OBJDIR_DEBUG)/library/psa_its_file.o $(OBJDIR_DEBUG)/library/ripemd160.o $(OBJDIR_DEBUG)/library/rsa.o $(OBJDIR_DEBUG)/library/rsa_internal.o $(OBJDIR_DEBUG)/library/sha256.o $(OBJDIR_DEBUG)/library/sha512.o $(OBJDIR_DEBUG)/library/threading.o $(OBJDIR_DEBUG)/library/timing.o $(OBJDIR_DEBUG)/library/version.o $(OBJDIR_DEBUG)/library/version_features.o $(OBJDIR_DEBUG)/library/xtea.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/library/pkwrite.o $(OBJDIR_DEBUG)/library/oid.o $(OBJDIR_DEBUG)/library/padlock.o $(OBJDIR_DEBUG)/library/pem.o $(OBJDIR_DEBUG)/library/pk.o $(OBJDIR_DEBUG)/library/pk_wrap.o $(OBJDIR_DEBUG)/library/pkcs12.o $(OBJDIR_DEBUG)/library/pkcs5.o $(OBJDIR_DEBUG)/library/pkparse.o $(OBJDIR_DEBUG)/library/platform.o $(OBJDIR_DEBUG)/library/platform_util.o $(OBJDIR_DEBUG)/library/poly1305.o $(OBJDIR_DEBUG)/library/psa_crypto.o $(OBJDIR_DEBUG)/library/psa_crypto_se.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/library/gcm.o $(OBJDIR_RELEASE)/library/dhm.o $(OBJDIR_RELEASE)/library/ecdh.o $(OBJDIR_RELEASE)/library/ecdsa.o $(OBJDIR_RELEASE)/library/ecjpake.o $(OBJDIR_RELEASE)/library/ecp.o $(OBJDIR_RELEASE)/library/ecp_curves.o $(OBJDIR_RELEASE)/library/entropy.o $(OBJDIR_RELEASE)/library/entropy_poll.o $(OBJDIR_RELEASE)/library/error.o $(OBJDIR_RELEASE)/library/des.o $(OBJDIR_RELEASE)/library/havege.o $(OBJDIR_RELEASE)/library/hkdf.o $(OBJDIR_RELEASE)/library/hmac_drbg.o $(OBJDIR_RELEASE)/library/md.o $(OBJDIR_RELEASE)/library/md2.o $(OBJDIR_RELEASE)/library/md4.o $(OBJDIR_RELEASE)/library/md5.o $(OBJDIR_RELEASE)/library/memory_buffer_alloc.o $(OBJDIR_RELEASE)/library/blowfish.o $(OBJDIR_RELEASE)/library/aes.o $(OBJDIR_RELEASE)/library/aesni.o $(OBJDIR_RELEASE)/library/arc4.o $(OBJDIR_RELEASE)/library/aria.o $(OBJDIR_RELEASE)/library/asn1parse.o $(OBJDIR_RELEASE)/library/asn1write.o $(OBJDIR_RELEASE)/library/base64.o $(OBJDIR_RELEASE)/library/bignum.o $(OBJDIR_RELEASE)/library/nist_kw.o $(OBJDIR_RELEASE)/library/camellia.o $(OBJDIR_RELEASE)/library/ccm.o $(OBJDIR_RELEASE)/library/chacha20.o $(OBJDIR_RELEASE)/library/chachapoly.o $(OBJDIR_RELEASE)/library/cipher.o $(OBJDIR_RELEASE)/library/cipher_wrap.o $(OBJDIR_RELEASE)/library/cmac.o $(OBJDIR_RELEASE)/library/ctr_drbg.o $(OBJDIR_RELEASE)/library/sha1.o $(OBJDIR_RELEASE)/library/psa_crypto_slot_management.o $(OBJDIR_RELEASE)/library/psa_crypto_storage.o $(OBJDIR_RELEASE)/library/psa_its_file.o $(OBJDIR_RELEASE)/library/ripemd160.o $(OBJDIR_RELEASE)/library/rsa.o $(OBJDIR_RELEASE)/library/rsa_internal.o $(OBJDIR_RELEASE)/library/sha256.o $(OBJDIR_RELEASE)/library/sha512.o $(OBJDIR_RELEASE)/library/threading.o $(OBJDIR_RELEASE)/library/timing.o $(OBJDIR_RELEASE)/library/version.o $(OBJDIR_RELEASE)/library/version_features.o $(OBJDIR_RELEASE)/library/xtea.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/library/pkwrite.o $(OBJDIR_RELEASE)/library/oid.o $(OBJDIR_RELEASE)/library/padlock.o $(OBJDIR_RELEASE)/library/pem.o $(OBJDIR_RELEASE)/library/pk.o $(OBJDIR_RELEASE)/library/pk_wrap.o $(OBJDIR_RELEASE)/library/pkcs12.o $(OBJDIR_RELEASE)/library/pkcs5.o $(OBJDIR_RELEASE)/library/pkparse.o $(OBJDIR_RELEASE)/library/platform.o $(OBJDIR_RELEASE)/library/platform_util.o $(OBJDIR_RELEASE)/library/poly1305.o $(OBJDIR_RELEASE)/library/psa_crypto.o $(OBJDIR_RELEASE)/library/psa_crypto_se.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG)/library || mkdir -p $(OBJDIR_DEBUG)/library
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/library/gcm.o: library/gcm.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/gcm.c -o $(OBJDIR_DEBUG)/library/gcm.o

$(OBJDIR_DEBUG)/library/dhm.o: library/dhm.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/dhm.c -o $(OBJDIR_DEBUG)/library/dhm.o

$(OBJDIR_DEBUG)/library/ecdh.o: library/ecdh.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/ecdh.c -o $(OBJDIR_DEBUG)/library/ecdh.o

$(OBJDIR_DEBUG)/library/ecdsa.o: library/ecdsa.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/ecdsa.c -o $(OBJDIR_DEBUG)/library/ecdsa.o

$(OBJDIR_DEBUG)/library/ecjpake.o: library/ecjpake.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/ecjpake.c -o $(OBJDIR_DEBUG)/library/ecjpake.o

$(OBJDIR_DEBUG)/library/ecp.o: library/ecp.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/ecp.c -o $(OBJDIR_DEBUG)/library/ecp.o

$(OBJDIR_DEBUG)/library/ecp_curves.o: library/ecp_curves.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/ecp_curves.c -o $(OBJDIR_DEBUG)/library/ecp_curves.o

$(OBJDIR_DEBUG)/library/entropy.o: library/entropy.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/entropy.c -o $(OBJDIR_DEBUG)/library/entropy.o

$(OBJDIR_DEBUG)/library/entropy_poll.o: library/entropy_poll.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/entropy_poll.c -o $(OBJDIR_DEBUG)/library/entropy_poll.o

$(OBJDIR_DEBUG)/library/error.o: library/error.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/error.c -o $(OBJDIR_DEBUG)/library/error.o

$(OBJDIR_DEBUG)/library/des.o: library/des.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/des.c -o $(OBJDIR_DEBUG)/library/des.o

$(OBJDIR_DEBUG)/library/havege.o: library/havege.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/havege.c -o $(OBJDIR_DEBUG)/library/havege.o

$(OBJDIR_DEBUG)/library/hkdf.o: library/hkdf.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/hkdf.c -o $(OBJDIR_DEBUG)/library/hkdf.o

$(OBJDIR_DEBUG)/library/hmac_drbg.o: library/hmac_drbg.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/hmac_drbg.c -o $(OBJDIR_DEBUG)/library/hmac_drbg.o

$(OBJDIR_DEBUG)/library/md.o: library/md.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/md.c -o $(OBJDIR_DEBUG)/library/md.o

$(OBJDIR_DEBUG)/library/md2.o: library/md2.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/md2.c -o $(OBJDIR_DEBUG)/library/md2.o

$(OBJDIR_DEBUG)/library/md4.o: library/md4.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/md4.c -o $(OBJDIR_DEBUG)/library/md4.o

$(OBJDIR_DEBUG)/library/md5.o: library/md5.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/md5.c -o $(OBJDIR_DEBUG)/library/md5.o

$(OBJDIR_DEBUG)/library/memory_buffer_alloc.o: library/memory_buffer_alloc.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/memory_buffer_alloc.c -o $(OBJDIR_DEBUG)/library/memory_buffer_alloc.o

$(OBJDIR_DEBUG)/library/blowfish.o: library/blowfish.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/blowfish.c -o $(OBJDIR_DEBUG)/library/blowfish.o

$(OBJDIR_DEBUG)/library/aes.o: library/aes.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/aes.c -o $(OBJDIR_DEBUG)/library/aes.o

$(OBJDIR_DEBUG)/library/aesni.o: library/aesni.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/aesni.c -o $(OBJDIR_DEBUG)/library/aesni.o

$(OBJDIR_DEBUG)/library/arc4.o: library/arc4.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/arc4.c -o $(OBJDIR_DEBUG)/library/arc4.o

$(OBJDIR_DEBUG)/library/aria.o: library/aria.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/aria.c -o $(OBJDIR_DEBUG)/library/aria.o

$(OBJDIR_DEBUG)/library/asn1parse.o: library/asn1parse.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/asn1parse.c -o $(OBJDIR_DEBUG)/library/asn1parse.o

$(OBJDIR_DEBUG)/library/asn1write.o: library/asn1write.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/asn1write.c -o $(OBJDIR_DEBUG)/library/asn1write.o

$(OBJDIR_DEBUG)/library/base64.o: library/base64.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/base64.c -o $(OBJDIR_DEBUG)/library/base64.o

$(OBJDIR_DEBUG)/library/bignum.o: library/bignum.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/bignum.c -o $(OBJDIR_DEBUG)/library/bignum.o

$(OBJDIR_DEBUG)/library/nist_kw.o: library/nist_kw.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/nist_kw.c -o $(OBJDIR_DEBUG)/library/nist_kw.o

$(OBJDIR_DEBUG)/library/camellia.o: library/camellia.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/camellia.c -o $(OBJDIR_DEBUG)/library/camellia.o

$(OBJDIR_DEBUG)/library/ccm.o: library/ccm.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/ccm.c -o $(OBJDIR_DEBUG)/library/ccm.o

$(OBJDIR_DEBUG)/library/chacha20.o: library/chacha20.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/chacha20.c -o $(OBJDIR_DEBUG)/library/chacha20.o

$(OBJDIR_DEBUG)/library/chachapoly.o: library/chachapoly.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/chachapoly.c -o $(OBJDIR_DEBUG)/library/chachapoly.o

$(OBJDIR_DEBUG)/library/cipher.o: library/cipher.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/cipher.c -o $(OBJDIR_DEBUG)/library/cipher.o

$(OBJDIR_DEBUG)/library/cipher_wrap.o: library/cipher_wrap.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/cipher_wrap.c -o $(OBJDIR_DEBUG)/library/cipher_wrap.o

$(OBJDIR_DEBUG)/library/cmac.o: library/cmac.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/cmac.c -o $(OBJDIR_DEBUG)/library/cmac.o

$(OBJDIR_DEBUG)/library/ctr_drbg.o: library/ctr_drbg.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/ctr_drbg.c -o $(OBJDIR_DEBUG)/library/ctr_drbg.o

$(OBJDIR_DEBUG)/library/sha1.o: library/sha1.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/sha1.c -o $(OBJDIR_DEBUG)/library/sha1.o

$(OBJDIR_DEBUG)/library/psa_crypto_slot_management.o: library/psa_crypto_slot_management.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/psa_crypto_slot_management.c -o $(OBJDIR_DEBUG)/library/psa_crypto_slot_management.o

$(OBJDIR_DEBUG)/library/psa_crypto_storage.o: library/psa_crypto_storage.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/psa_crypto_storage.c -o $(OBJDIR_DEBUG)/library/psa_crypto_storage.o

$(OBJDIR_DEBUG)/library/psa_its_file.o: library/psa_its_file.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/psa_its_file.c -o $(OBJDIR_DEBUG)/library/psa_its_file.o

$(OBJDIR_DEBUG)/library/ripemd160.o: library/ripemd160.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/ripemd160.c -o $(OBJDIR_DEBUG)/library/ripemd160.o

$(OBJDIR_DEBUG)/library/rsa.o: library/rsa.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/rsa.c -o $(OBJDIR_DEBUG)/library/rsa.o

$(OBJDIR_DEBUG)/library/rsa_internal.o: library/rsa_internal.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/rsa_internal.c -o $(OBJDIR_DEBUG)/library/rsa_internal.o

$(OBJDIR_DEBUG)/library/sha256.o: library/sha256.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/sha256.c -o $(OBJDIR_DEBUG)/library/sha256.o

$(OBJDIR_DEBUG)/library/sha512.o: library/sha512.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/sha512.c -o $(OBJDIR_DEBUG)/library/sha512.o

$(OBJDIR_DEBUG)/library/threading.o: library/threading.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/threading.c -o $(OBJDIR_DEBUG)/library/threading.o

$(OBJDIR_DEBUG)/library/timing.o: library/timing.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/timing.c -o $(OBJDIR_DEBUG)/library/timing.o

$(OBJDIR_DEBUG)/library/version.o: library/version.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/version.c -o $(OBJDIR_DEBUG)/library/version.o

$(OBJDIR_DEBUG)/library/version_features.o: library/version_features.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/version_features.c -o $(OBJDIR_DEBUG)/library/version_features.o

$(OBJDIR_DEBUG)/library/xtea.o: library/xtea.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/xtea.c -o $(OBJDIR_DEBUG)/library/xtea.o

$(OBJDIR_DEBUG)/main.o: main.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.c -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/library/pkwrite.o: library/pkwrite.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/pkwrite.c -o $(OBJDIR_DEBUG)/library/pkwrite.o

$(OBJDIR_DEBUG)/library/oid.o: library/oid.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/oid.c -o $(OBJDIR_DEBUG)/library/oid.o

$(OBJDIR_DEBUG)/library/padlock.o: library/padlock.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/padlock.c -o $(OBJDIR_DEBUG)/library/padlock.o

$(OBJDIR_DEBUG)/library/pem.o: library/pem.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/pem.c -o $(OBJDIR_DEBUG)/library/pem.o

$(OBJDIR_DEBUG)/library/pk.o: library/pk.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/pk.c -o $(OBJDIR_DEBUG)/library/pk.o

$(OBJDIR_DEBUG)/library/pk_wrap.o: library/pk_wrap.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/pk_wrap.c -o $(OBJDIR_DEBUG)/library/pk_wrap.o

$(OBJDIR_DEBUG)/library/pkcs12.o: library/pkcs12.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/pkcs12.c -o $(OBJDIR_DEBUG)/library/pkcs12.o

$(OBJDIR_DEBUG)/library/pkcs5.o: library/pkcs5.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/pkcs5.c -o $(OBJDIR_DEBUG)/library/pkcs5.o

$(OBJDIR_DEBUG)/library/pkparse.o: library/pkparse.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/pkparse.c -o $(OBJDIR_DEBUG)/library/pkparse.o

$(OBJDIR_DEBUG)/library/platform.o: library/platform.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/platform.c -o $(OBJDIR_DEBUG)/library/platform.o

$(OBJDIR_DEBUG)/library/platform_util.o: library/platform_util.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/platform_util.c -o $(OBJDIR_DEBUG)/library/platform_util.o

$(OBJDIR_DEBUG)/library/poly1305.o: library/poly1305.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/poly1305.c -o $(OBJDIR_DEBUG)/library/poly1305.o

$(OBJDIR_DEBUG)/library/psa_crypto.o: library/psa_crypto.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/psa_crypto.c -o $(OBJDIR_DEBUG)/library/psa_crypto.o

$(OBJDIR_DEBUG)/library/psa_crypto_se.o: library/psa_crypto_se.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c library/psa_crypto_se.c -o $(OBJDIR_DEBUG)/library/psa_crypto_se.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)/library
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE)/library || mkdir -p $(OBJDIR_RELEASE)/library
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/library/gcm.o: library/gcm.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/gcm.c -o $(OBJDIR_RELEASE)/library/gcm.o

$(OBJDIR_RELEASE)/library/dhm.o: library/dhm.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/dhm.c -o $(OBJDIR_RELEASE)/library/dhm.o

$(OBJDIR_RELEASE)/library/ecdh.o: library/ecdh.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/ecdh.c -o $(OBJDIR_RELEASE)/library/ecdh.o

$(OBJDIR_RELEASE)/library/ecdsa.o: library/ecdsa.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/ecdsa.c -o $(OBJDIR_RELEASE)/library/ecdsa.o

$(OBJDIR_RELEASE)/library/ecjpake.o: library/ecjpake.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/ecjpake.c -o $(OBJDIR_RELEASE)/library/ecjpake.o

$(OBJDIR_RELEASE)/library/ecp.o: library/ecp.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/ecp.c -o $(OBJDIR_RELEASE)/library/ecp.o

$(OBJDIR_RELEASE)/library/ecp_curves.o: library/ecp_curves.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/ecp_curves.c -o $(OBJDIR_RELEASE)/library/ecp_curves.o

$(OBJDIR_RELEASE)/library/entropy.o: library/entropy.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/entropy.c -o $(OBJDIR_RELEASE)/library/entropy.o

$(OBJDIR_RELEASE)/library/entropy_poll.o: library/entropy_poll.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/entropy_poll.c -o $(OBJDIR_RELEASE)/library/entropy_poll.o

$(OBJDIR_RELEASE)/library/error.o: library/error.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/error.c -o $(OBJDIR_RELEASE)/library/error.o

$(OBJDIR_RELEASE)/library/des.o: library/des.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/des.c -o $(OBJDIR_RELEASE)/library/des.o

$(OBJDIR_RELEASE)/library/havege.o: library/havege.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/havege.c -o $(OBJDIR_RELEASE)/library/havege.o

$(OBJDIR_RELEASE)/library/hkdf.o: library/hkdf.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/hkdf.c -o $(OBJDIR_RELEASE)/library/hkdf.o

$(OBJDIR_RELEASE)/library/hmac_drbg.o: library/hmac_drbg.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/hmac_drbg.c -o $(OBJDIR_RELEASE)/library/hmac_drbg.o

$(OBJDIR_RELEASE)/library/md.o: library/md.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/md.c -o $(OBJDIR_RELEASE)/library/md.o

$(OBJDIR_RELEASE)/library/md2.o: library/md2.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/md2.c -o $(OBJDIR_RELEASE)/library/md2.o

$(OBJDIR_RELEASE)/library/md4.o: library/md4.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/md4.c -o $(OBJDIR_RELEASE)/library/md4.o

$(OBJDIR_RELEASE)/library/md5.o: library/md5.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/md5.c -o $(OBJDIR_RELEASE)/library/md5.o

$(OBJDIR_RELEASE)/library/memory_buffer_alloc.o: library/memory_buffer_alloc.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/memory_buffer_alloc.c -o $(OBJDIR_RELEASE)/library/memory_buffer_alloc.o

$(OBJDIR_RELEASE)/library/blowfish.o: library/blowfish.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/blowfish.c -o $(OBJDIR_RELEASE)/library/blowfish.o

$(OBJDIR_RELEASE)/library/aes.o: library/aes.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/aes.c -o $(OBJDIR_RELEASE)/library/aes.o

$(OBJDIR_RELEASE)/library/aesni.o: library/aesni.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/aesni.c -o $(OBJDIR_RELEASE)/library/aesni.o

$(OBJDIR_RELEASE)/library/arc4.o: library/arc4.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/arc4.c -o $(OBJDIR_RELEASE)/library/arc4.o

$(OBJDIR_RELEASE)/library/aria.o: library/aria.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/aria.c -o $(OBJDIR_RELEASE)/library/aria.o

$(OBJDIR_RELEASE)/library/asn1parse.o: library/asn1parse.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/asn1parse.c -o $(OBJDIR_RELEASE)/library/asn1parse.o

$(OBJDIR_RELEASE)/library/asn1write.o: library/asn1write.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/asn1write.c -o $(OBJDIR_RELEASE)/library/asn1write.o

$(OBJDIR_RELEASE)/library/base64.o: library/base64.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/base64.c -o $(OBJDIR_RELEASE)/library/base64.o

$(OBJDIR_RELEASE)/library/bignum.o: library/bignum.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/bignum.c -o $(OBJDIR_RELEASE)/library/bignum.o

$(OBJDIR_RELEASE)/library/nist_kw.o: library/nist_kw.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/nist_kw.c -o $(OBJDIR_RELEASE)/library/nist_kw.o

$(OBJDIR_RELEASE)/library/camellia.o: library/camellia.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/camellia.c -o $(OBJDIR_RELEASE)/library/camellia.o

$(OBJDIR_RELEASE)/library/ccm.o: library/ccm.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/ccm.c -o $(OBJDIR_RELEASE)/library/ccm.o

$(OBJDIR_RELEASE)/library/chacha20.o: library/chacha20.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/chacha20.c -o $(OBJDIR_RELEASE)/library/chacha20.o

$(OBJDIR_RELEASE)/library/chachapoly.o: library/chachapoly.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/chachapoly.c -o $(OBJDIR_RELEASE)/library/chachapoly.o

$(OBJDIR_RELEASE)/library/cipher.o: library/cipher.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/cipher.c -o $(OBJDIR_RELEASE)/library/cipher.o

$(OBJDIR_RELEASE)/library/cipher_wrap.o: library/cipher_wrap.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/cipher_wrap.c -o $(OBJDIR_RELEASE)/library/cipher_wrap.o

$(OBJDIR_RELEASE)/library/cmac.o: library/cmac.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/cmac.c -o $(OBJDIR_RELEASE)/library/cmac.o

$(OBJDIR_RELEASE)/library/ctr_drbg.o: library/ctr_drbg.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/ctr_drbg.c -o $(OBJDIR_RELEASE)/library/ctr_drbg.o

$(OBJDIR_RELEASE)/library/sha1.o: library/sha1.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/sha1.c -o $(OBJDIR_RELEASE)/library/sha1.o

$(OBJDIR_RELEASE)/library/psa_crypto_slot_management.o: library/psa_crypto_slot_management.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/psa_crypto_slot_management.c -o $(OBJDIR_RELEASE)/library/psa_crypto_slot_management.o

$(OBJDIR_RELEASE)/library/psa_crypto_storage.o: library/psa_crypto_storage.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/psa_crypto_storage.c -o $(OBJDIR_RELEASE)/library/psa_crypto_storage.o

$(OBJDIR_RELEASE)/library/psa_its_file.o: library/psa_its_file.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/psa_its_file.c -o $(OBJDIR_RELEASE)/library/psa_its_file.o

$(OBJDIR_RELEASE)/library/ripemd160.o: library/ripemd160.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/ripemd160.c -o $(OBJDIR_RELEASE)/library/ripemd160.o

$(OBJDIR_RELEASE)/library/rsa.o: library/rsa.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/rsa.c -o $(OBJDIR_RELEASE)/library/rsa.o

$(OBJDIR_RELEASE)/library/rsa_internal.o: library/rsa_internal.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/rsa_internal.c -o $(OBJDIR_RELEASE)/library/rsa_internal.o

$(OBJDIR_RELEASE)/library/sha256.o: library/sha256.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/sha256.c -o $(OBJDIR_RELEASE)/library/sha256.o

$(OBJDIR_RELEASE)/library/sha512.o: library/sha512.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/sha512.c -o $(OBJDIR_RELEASE)/library/sha512.o

$(OBJDIR_RELEASE)/library/threading.o: library/threading.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/threading.c -o $(OBJDIR_RELEASE)/library/threading.o

$(OBJDIR_RELEASE)/library/timing.o: library/timing.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/timing.c -o $(OBJDIR_RELEASE)/library/timing.o

$(OBJDIR_RELEASE)/library/version.o: library/version.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/version.c -o $(OBJDIR_RELEASE)/library/version.o

$(OBJDIR_RELEASE)/library/version_features.o: library/version_features.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/version_features.c -o $(OBJDIR_RELEASE)/library/version_features.o

$(OBJDIR_RELEASE)/library/xtea.o: library/xtea.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/xtea.c -o $(OBJDIR_RELEASE)/library/xtea.o

$(OBJDIR_RELEASE)/main.o: main.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.c -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/library/pkwrite.o: library/pkwrite.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/pkwrite.c -o $(OBJDIR_RELEASE)/library/pkwrite.o

$(OBJDIR_RELEASE)/library/oid.o: library/oid.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/oid.c -o $(OBJDIR_RELEASE)/library/oid.o

$(OBJDIR_RELEASE)/library/padlock.o: library/padlock.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/padlock.c -o $(OBJDIR_RELEASE)/library/padlock.o

$(OBJDIR_RELEASE)/library/pem.o: library/pem.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/pem.c -o $(OBJDIR_RELEASE)/library/pem.o

$(OBJDIR_RELEASE)/library/pk.o: library/pk.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/pk.c -o $(OBJDIR_RELEASE)/library/pk.o

$(OBJDIR_RELEASE)/library/pk_wrap.o: library/pk_wrap.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/pk_wrap.c -o $(OBJDIR_RELEASE)/library/pk_wrap.o

$(OBJDIR_RELEASE)/library/pkcs12.o: library/pkcs12.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/pkcs12.c -o $(OBJDIR_RELEASE)/library/pkcs12.o

$(OBJDIR_RELEASE)/library/pkcs5.o: library/pkcs5.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/pkcs5.c -o $(OBJDIR_RELEASE)/library/pkcs5.o

$(OBJDIR_RELEASE)/library/pkparse.o: library/pkparse.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/pkparse.c -o $(OBJDIR_RELEASE)/library/pkparse.o

$(OBJDIR_RELEASE)/library/platform.o: library/platform.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/platform.c -o $(OBJDIR_RELEASE)/library/platform.o

$(OBJDIR_RELEASE)/library/platform_util.o: library/platform_util.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/platform_util.c -o $(OBJDIR_RELEASE)/library/platform_util.o

$(OBJDIR_RELEASE)/library/poly1305.o: library/poly1305.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/poly1305.c -o $(OBJDIR_RELEASE)/library/poly1305.o

$(OBJDIR_RELEASE)/library/psa_crypto.o: library/psa_crypto.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/psa_crypto.c -o $(OBJDIR_RELEASE)/library/psa_crypto.o

$(OBJDIR_RELEASE)/library/psa_crypto_se.o: library/psa_crypto_se.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c library/psa_crypto_se.c -o $(OBJDIR_RELEASE)/library/psa_crypto_se.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)/library
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

